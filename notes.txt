6/13
- in package.json, must set "type": "module" 
    - to use import x from "x"
    - otherwise, u have to use const x = require("x")
6/14
- in scripts of package.json creates npm run ____
http://localhost:5001/api/notes
when you put 
    app.get("/api/notes", (req, res) => {
        res.send("You have 5 notes");
    })

API: application programming interface, allows two apps to talk to each other
    users can be malicious, apis are a level of security

    REST api:
        get, post, put, delete << http methods
        when you add a :something to the end of a path, it is used to indicate what specifically you're updating/deleting
    codes:
        1xx->informal
        2xx->success
        3xx->redirect
        4xx->client error
        5xx-> server error
Nodemon - add on to node
    reloads site on change

* Updating Paths:
    - because get,post,put,delete can get long, we move it to a diff file.
        in server, instead, we import that file, and then do
            app.use("path", file)
        in the new file
            import express
            const router = express.Router();
            and then router.get, router.push, router. put. router.delete
                the new paths for these are add ons to "path" in app.use
            export default router;

    * Another Path Update:
        - then you move the function declarations to another file
            export them
            import the functions in the noteroutes

    *** Generally
    While you can define all your functions for REST(post, push, put, delete) into one
    file, its cleaner to split things up
    Steps:
        move paths to a separate folder
        move functions to another folder
        for paths, call it with the functions
        back in the main file, you do app.use("path to paths", router_name)

when you move files around, you have to change the paths in package.json'

sql / nosql

sql has table, rows/cols
less flexible
uses sql
best for complex queries/relational data


nosql = json/key+value
query language
bigdata(quick updates/big)


.env has to be in the working directory
to connect, export a connection function

REST operations
each function has req and res
req.body has jsons that u push with it, try in postman
but to get a note, Note(the class).find()
specific id: Note.find(req.params.id);
look at the file for more


rate limiting - you know what it is

There are notes on useState and useEffect. High quality in frontend/src/Pages/HomePage
A lot of changes, UI is very easy and fast if you practice.
tailwind and daisy UI are saving my life

